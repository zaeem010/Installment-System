@model AR_IS.ViewModel.LedgerVM
@{
    ViewBag.Title = "LedgerSearch";
    double bal = 0.00;
    double sum_cr = 0.00;
    double sum_dr = 0.00;
    var i = 0;
    var count = Model.trans_list.Count();
    double balance = 0.00;
    

}
<div class="content-wrapper">

    <!-- Container-fluid starts -->
    <!-- Main content starts -->
    <div class="container-fluid">
        <div class="row">
            <div class="main-header">
                <h4></h4>
            </div>
        </div>
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-header-text"><u>Detail Ledgers</u></h5>
                </div>
                <div class="card-block">
                    @using (Html.BeginForm("DetailLedgerSearch", "Ledger", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="row">

                            <div class="col-md-4">
                                <label><b>Select Account</b></label>
                                @Html.DropDownListFor(m => m.ThirdLevel.AccountNo, new SelectList(Model.ThirdList, "AccountNo", "AccountTitle"), "Select Account", htmlAttributes: new { @class = "chosen-select form-control" })
                            </div>
                            <div class="col-md-4">
                                <label> Date From</label>
                                <input type="date" name="s_date" value="@Model.s_date" class="form-control" id="date_st" />
                            </div>
                            <div class="col-md-4">
                                <label> Date To</label>
                                <input type="date" name="e_date" value="@Model.e_date" class="form-control" id="date_end" />
                            </div>
                            <br />
                            <div class="col-md-3 offset-sm-10">
                                <button type="submit" class="btn btn-primary" style="margin-top:30px"><i class="fa fa-search"></i>&nbsp; Search</button>

                            </div>

                        </div>
                    }
                </div>
            </div>
            <div class="card" style="margin-top:20px">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-header-text"><u>Detail Ledger</u></h5>
                            </div>
                            <a href="@Url.Action("PrintDetail", new { s_date = Model.s_date, e_date= Model.e_date , AccountNo= Model.ThirdLevel.AccountNo } )" target="_blank" class="btn btn-primary col-md-3" style="margin-left:20px"><i class="fa fa-print"></i>&nbsp; Print</a>
                            <div class="card-block">

                                <br />
                                <br />
                                <table id="accounts" class="table dt-responsive table-striped table-bordered nowrap">
                                    <thead class="bordered-darkorange">
                                        <tr style="background-color:#2196F3;color:white">
                                            <th colspan="4">(Account Holder Name : <u>@Model.ThirdLevel.AccountTitle</u>)</th>

                                            <th colspan="3">( Opening Balance Pkr : <u> @Model.ThirdLevel.Cr.ToString("#,##0"))</u></th>
                                        </tr>
                                        <tr>
                                            <th>Trans Id</th>
                                            <th>Date</th>
                                            <th>Vtype</th>
                                            <th>Description</th>
                                            <th>DEBIT</th>
                                            <th>CREDIT</th>
                                            <th>Balance</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.trans_list.OrderBy(c => c.Transid))
                                        {
                                            bal = Convert.ToDouble(Model.ThirdLevel.Cr);
                                            sum_cr += Convert.ToDouble(item.Cr);
                                            sum_dr += Convert.ToDouble(item.Dr);
                                            if (item.HeadId == 1 || item.HeadId == 5)
                                            {
                                                bal = (bal + (sum_dr - sum_cr));
                                            }
                                            else
                                            {
                                                bal = (bal + (sum_cr - sum_dr));
                                            }
                                        <tr>
                                            <td>@item.Transid</td>
                                            <td>@Convert.ToDateTime(item.TransDate).ToString("dd-MMM-yyyy")</td>
                                            @if (item.Vtype == "PINVV" || item.Vtype == "PINVWTC")
                                            {
                                                <td>PV</td>
                                            }
                                            else if (item.Vtype == "RPINVWTC")
                                            {
                                                <td>PVRT</td>
                                            }
                                            else if (item.Vtype == "RSINVWTC")
                                            {
                                                <td>SVRT</td>
                                            }
                                            else if (item.Vtype == "SINVWI" || item.Vtype == "SINVWTC")
                                            {
                                                <td>SV</td>
                                            }
                                            else if (item.Vtype == "CPVPINVV" || item.Vtype == "CPVPINVWTC")
                                            {
                                                <td>CPV</td>
                                            }
                                            else if (item.Vtype == "CRVSINVWI" || item.Vtype == "CRVSINVWTC")
                                            {
                                                <td>CRV</td>
                                            }
                                            else
                                            {
                                                <td>@item.Vtype</td>
                                            }
                                            <td>
                                                @item.TransDes&nbsp;&nbsp;&nbsp;
                                                @foreach (var PurDetail in Model.PurDetail.Where(z => z.Invid == item.Invid && z.Vtype == item.Vtype))
                                                {

                                                    <p>
                                                        <span class="badge badge-info">
                                                            <b>@PurDetail.ItemName</b>&nbsp;&nbsp;&nbsp;
                                                            @(Convert.ToInt32(PurDetail.ItemUnit) * Convert.ToInt32(PurDetail.CTN) + Convert.ToInt32(PurDetail.Qty))&nbsp;  x
                                                            @PurDetail.CP.ToString("#,##0")&nbsp; =
                                                            @PurDetail.NetTotal.ToString("#,##0")
                                                        </span>

                                                    </p>

                                                }

                                                @foreach (var PurDetailVehicle in Model.PurDetailVehicle.Where(z => z.Invid == item.Invid && z.Vtype == item.Vtype))
                                                {

                                                    <p>
                                                        <span class="badge badge-info">
                                                            <b>@PurDetailVehicle.VehicleName</b>&nbsp;&nbsp;&nbsp;
                                                            @(PurDetailVehicle.EngineNo)&nbsp;
                                                            @PurDetailVehicle.WithGSTTotal.ToString("#,##0")
                                                        </span>

                                                    </p>

                                                }
                                                @foreach (var PurDetailReturn in Model.PurDetailReturn.Where(z => z.Invid == item.Invid && z.Vtype == item.Vtype))
                                                {

                                                    <p>
                                                        <span class="badge badge-info">
                                                            <b>@PurDetailReturn.ItemName</b>&nbsp;&nbsp;&nbsp;
                                                            @(Convert.ToInt32(PurDetailReturn.ItemUnit) * Convert.ToInt32(PurDetailReturn.CTN) + Convert.ToInt32(PurDetailReturn.Qty))&nbsp;  x
                                                            @PurDetailReturn.CP.ToString("#,##0")&nbsp; =
                                                            @PurDetailReturn.NetTotal.ToString("#,##0")
                                                        </span>

                                                    </p>

                                                }
                                                @foreach (var SalDetail in Model.SaleDetail.Where(z => z.Invid == item.Invid && z.Vtype == item.Vtype))
                                                {

                                                    <p>
                                                        <span class="badge badge-info">
                                                            <b>@SalDetail.ItemName</b>&nbsp;&nbsp;&nbsp;
                                                            @(Convert.ToInt32(SalDetail.ItemUnit) * Convert.ToInt32(SalDetail.CTN) + Convert.ToInt32(SalDetail.Qty))&nbsp;  x
                                                            @SalDetail.SP.ToString("#,##0")&nbsp; =
                                                            @SalDetail.NetTotal.ToString("#,##0")
                                                        </span>

                                                    </p>
                                                }
                                                @foreach (var SWI in Model.SWI.Where(z => z.Invid == item.Invid && z.Vtype == item.Vtype))
                                                {

                                                    <p>
                                                        <span class="badge badge-info">
                                                            <b>@SWI.VehicleName</b>&nbsp;&nbsp;&nbsp;
                                                            @(SWI.EngineNo)&nbsp;
                                                            @SWI.NetTotal.ToString("#,##0")
                                                        </span>

                                                    </p>
                                                }
                                                @foreach (var SaleDetailReturn in Model.SaleDetailReturn.Where(z => z.Invid == item.Invid && z.Vtype == item.Vtype))
                                                {

                                                    <p>
                                                        <span class="badge badge-info">
                                                            <b>@SaleDetailReturn.ItemName</b>&nbsp;&nbsp;&nbsp;
                                                            @(Convert.ToInt32(SaleDetailReturn.ItemUnit) * Convert.ToInt32(SaleDetailReturn.CTN) + Convert.ToInt32(SaleDetailReturn.Qty))&nbsp;  x
                                                            @SaleDetailReturn.SP.ToString("#,##0")&nbsp; =
                                                            @SaleDetailReturn.NetTotal.ToString("#,##0")
                                                        </span>

                                                    </p>
                                                }
                                            </td>
                                            <td>@item.Dr.ToString("#,##0")</td>
                                            <td>@item.Cr.ToString("#,##0")</td>
                                            @if (++i != count)
                                            {
                                                <td>@bal.ToString("#,##0")</td>
                                            }
                                            else
                                            {
                                                <td> @(balance = bal) </td>
                                            }
                                        </tr>
                                            
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr style="border:2px solid #CCCCCC">
                                            <th style="text-align:center;" colspan="4"> <label class="label label-lg label-default" style="font-size: 15px">Grand Total</label></th>
                                            <th style="border:2px solid #CCCCCC"><label class="label label-lg label-primary" style="font-size: 15px">@sum_dr.ToString("#,##0")</label></th>
                                            <th style="border:2px solid #CCCCCC"><label class="label label-lg label-danger" style="font-size: 15px">@sum_cr.ToString("#,##0")</label></th>
                                            <th style="border:2px solid #CCCCCC"><label class="label label-lg label-success" style="font-size: 15px">@balance.ToString("#,##0")</label></th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <!-- Main content ends -->
    <!-- Container-fluid ends -->
</div>

<script>
    $('.chosen-select').chosen();
</script>



